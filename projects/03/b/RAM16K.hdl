// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    DMux4Way(
      in=load,
      sel=address[12..13],
      a=load-ram-0,
      b=load-ram-1,
      c=load-ram-2,
      d=load-ram-3
    );

    RAM4K(in=in, load=load-ram-0, address=address[0..11], out=out-ram-0);
    RAM4K(in=in, load=load-ram-1, address=address[0..11], out=out-ram-1);
    RAM4K(in=in, load=load-ram-2, address=address[0..11], out=out-ram-2);
    RAM4K(in=in, load=load-ram-3, address=address[0..11], out=out-ram-3);

    Mux4Way16(
      a=out-ram-0,
      b=out-ram-1,
      c=out-ram-2,
      d=out-ram-3,
      sel=address[12..13],
      out=out
    );
}